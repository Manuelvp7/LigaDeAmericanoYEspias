/*
 * This java source file is generated by DAO4J v1.19
 * Generated on Mon Apr 23 23:08:23 CDT 2018
 * For more information, please contact b-i-d@163.com
 * Please check http://sourceforge.net/projects/dao4j/ for the latest version.
 */

package DAOImpl;

import Modelo.EspiatienepartidoKey;
import Modelo.Espiatienepartido;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.Types;
import java.util.List;
import java.util.ArrayList;
import Modelo.*;
import DAO.EspiatienepartidoDAO;

/**
 * This class provides methods to populate DB Table of espiaTienePartido
 */
public class EspiatienepartidoDAOImpl implements EspiatienepartidoDAO {
    /* SQL to insert data */
    private static final String SQL_INSERT =
        "INSERT INTO espiaTienePartido ("
        + "aliasEspia, temporada, noJornada, equipoLocal, equipoVisitante, fecha, reporte"
        + ") VALUES (?, ?, ?, ?, ?, ?, ?)";

    /* SQL to select data */
    private static final String SQL_SELECT =
        "SELECT "
        + "aliasEspia, temporada, noJornada, equipoLocal, equipoVisitante, fecha, reporte "
        + "FROM espiaTienePartido WHERE "
        + "aliasEspia = ? AND temporada = ? AND noJornada = ? AND equipoLocal = ? AND equipoVisitante = ?";

    /* SQL to update data */
    private static final String SQL_UPDATE =
        "UPDATE espiaTienePartido SET "
        + "fecha = ?, reporte = ? "
        + "WHERE "
        + "aliasEspia = ? AND temporada = ? AND noJornada = ? AND equipoLocal = ? AND equipoVisitante = ?";

    /* SQL to delete data */
    private static final String SQL_DELETE =
        "DELETE FROM espiaTienePartido WHERE "
        + "aliasEspia = ? AND temporada = ? AND noJornada = ? AND equipoLocal = ? AND equipoVisitante = ?";

    /**
     * Create a new record in Database.
     * @param bean   The Object to be inserted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void create(Espiatienepartido bean, Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement(SQL_INSERT);
            ps.setString(1, bean.getAliasespia());
            ps.setString(2, bean.getTemporada());
            ps.setInt(3, bean.getNojornada());
            ps.setString(4, bean.getEquipolocal());
            ps.setString(5, bean.getEquipovisitante());
            if (bean.getFecha() != null)
                ps.setDate(6, new java.sql.Date(bean.getFecha().getTime()));
            else
                ps.setNull(6, Types.DATE);
            ps.setString(7, bean.getReporte());
            ps.executeUpdate();
        }finally {
            close(ps);
        }
    }

    /**
     * Retrive a record from Database.
     * @param beanKey   The PK Object to be retrived.
     * @param conn      JDBC Connection.
     * @exception       SQLException if something is wrong.
     */
    public Espiatienepartido load(EspiatienepartidoKey key, Connection conn) throws SQLException {
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ps = conn.prepareStatement(SQL_SELECT);
            ps.setString(1, key.getAliasespia());
            ps.setString(2, key.getTemporada());
            ps.setInt(3, key.getNojornada());
            ps.setString(4, key.getEquipolocal());
            ps.setString(5, key.getEquipovisitante());
            rs = ps.executeQuery();
            List results = getResults(rs);
            if (results.size() > 0)
                return (Espiatienepartido) results.get(0);
            else
                return null;
        }finally {
            close(rs);
            close(ps);
        }
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void update(Espiatienepartido bean, Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement(SQL_UPDATE);
            if (bean.getFecha() != null)
                ps.setDate(1, new java.sql.Date(bean.getFecha().getTime()));
            else
                ps.setNull(1, Types.DATE);
            ps.setString(2, bean.getReporte());
            ps.setString(3, bean.getAliasespia());
            ps.setString(4, bean.getTemporada());
            ps.setInt(5, bean.getNojornada());
            ps.setString(6, bean.getEquipolocal());
            ps.setString(7, bean.getEquipovisitante());
            ps.executeUpdate();
        }finally {
            close(ps);
        }
    }

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void delete(EspiatienepartidoKey key, Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement(SQL_DELETE);
            ps.setString(1, key.getAliasespia());
            ps.setString(2, key.getTemporada());
            ps.setInt(3, key.getNojornada());
            ps.setString(4, key.getEquipolocal());
            ps.setString(5, key.getEquipovisitante());
            ps.executeUpdate();
        }finally {
            close(ps);
        }
    }
    
    /**
     * Populate the ResultSet.
     * @param rs     The ResultSet.
     * @return       The Object to retrieve from DB.
     * @exception    SQLException if something is wrong.
     */
    protected List<Espiatienepartido> getResults(ResultSet rs) throws SQLException {
        List results = new ArrayList<Espiatienepartido>();
        while (rs.next()) {
            Espiatienepartido bean = new Espiatienepartido();
            bean.setAliasespia(rs.getString("aliasEspia"));
            bean.setTemporada(rs.getString("temporada"));
            bean.setNojornada(rs.getInt("noJornada"));
            bean.setEquipolocal(rs.getString("equipoLocal"));
            bean.setEquipovisitante(rs.getString("equipoVisitante"));
            bean.setFecha(rs.getDate("fecha"));
            bean.setReporte(rs.getString("reporte"));
            results.add(bean);
        }
        return results;
    }

    /**
     * Close JDBC Statement.
     * @param stmt  Statement to be closed.
     */
    protected void close(Statement stmt) {
        if (stmt != null) {
            try {
                stmt.close();
            }catch(SQLException e){}
        }
    }

    /**
     * Close JDBC ResultSet.
     * @param rs  ResultSet to be closed.
     */
    protected void close(ResultSet rs) {
        if (rs != null) {
            try {
                rs.close();
            }catch(SQLException e){}
        }
    }
}